name: Build release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*' # Push events to any matching semantic tag. For example, 1.10.1 or 2.0.0 or 3.0.0-alpha.

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config: [release]

    runs-on: ubuntu-latest

    env:
      BUILDDIR: "build_${{ matrix.config }}"
      PICO_SDK_PATH: /usr/share/pico_sdk

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get --yes install gcc-arm-none-eabi
        ( git clone --depth 1 https://github.com/raspberrypi/pico-sdk $PICO_SDK_PATH;
          cd $PICO_SDK_PATH;
          git submodule update --init;
        )
        git clone --depth 1 https://github.com/raspberrypi/picotool.git
        cd picotool
        mkdir build
        cd build
        cmake ..
        make -j
        sudo make install
        cd ..
        rm -rf picotool

    - name: Configure CMake
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        CONFARGS=""
        CONF=$(echo ${{ matrix.config }} | cut -d '-' -f1)
        echo "Build for config: default"
        cmake --fresh -B ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_TIME_PROVIDED_VERSION=${{ github.ref_name }} ${CONFARGS}

    - name: Build
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        make -C ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -j

    - name: Package artifacts
      run: |
        cd ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}
        tar cvzf ${GITHUB_WORKSPACE}/colobus_firmware-${{ matrix.config }}-${{ github.ref_name }}.tgz *.bin *.elf *.elf.map *.hex *.uf2

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: colobus_firmware-${{ matrix.config }}-${{ github.ref_name }}
        path: |
          ${{ github.workspace }}/colobus_firmware-*-${{ github.ref_name }}.tgz

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: list files
        run: ls

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          draft: false
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: "*.tgz"
